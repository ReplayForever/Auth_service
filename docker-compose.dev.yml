version: '3.4'

services:
  auth_service:
    build: ./src
    container_name: auth_service
    depends_on:
      - redis
      - auth_postgres
    ports:
      - "8002:8002"
    env_file:
      - .env
    networks:
      - my_network

  auth_nginx:
    image: nginx:latest
    container_name: auth_nginx
    volumes:
      - ./src/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./src/nginx_config:/etc/nginx/conf.d:ro
    depends_on:
      - auth_service
    ports:
      - "82:82"
    networks:
      - my_network

  auth_postgres:
    image: postgres:15
    container_name: auth_postgres
#    volumes:
#       - ./.data/postgres:/data/postgres
#       - ./dump.sql:/docker-entrypoint-initdb.d/dump.sql:ro
    environment:
      POSTGRES_DB: ${DB_NAME:-auth_database}
      POSTGRES_USER: ${DB_USER:-app}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    command: -p 5434
    ports:
      - "5434:5434"
    networks:
      - my_network

  auth_tests:
    build: ./tests/functional
    container_name: auth_tests
    depends_on:
      - auth_nginx
      - auth_postgres
    env_file:
      - .env
    networks:
      - my_network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - my_network
  
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "6831:6831/udp"
      - "16686:16686"
    networks:
      - my_network


networks:
  my_network:
    external: True
