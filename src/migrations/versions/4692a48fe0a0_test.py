from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4692a48fe0a0'
down_revision: Union[str, None] = '84accb4dc49d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'login_histories', ['id', 'user_device_type'])
    op.drop_constraint('login_histories_user_id_fkey', 'login_histories', type_='foreignkey')
    op.create_foreign_key(None, 'login_histories', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_unique_constraint(None, 'roles', ['id'])
    op.create_unique_constraint(None, 'tokens', ['id'])
    op.add_column('users', sa.Column('yandex_login', sa.String(length=255), nullable=True))
    op.create_unique_constraint(None, 'users', ['yandex_login'])
    op.create_unique_constraint(None, 'users', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_column('users', 'yandex_login')
    op.drop_constraint(None, 'tokens', type_='unique')
    op.drop_constraint(None, 'roles', type_='unique')
    op.drop_constraint(None, 'login_histories', type_='foreignkey')
    op.create_foreign_key('login_histories_user_id_fkey', 'login_histories', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'login_histories', type_='unique')
